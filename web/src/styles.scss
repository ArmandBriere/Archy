@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$green-palette: (
  50: #eaf2e6,
  100: #c9dec0,
  200: #a6c897,
  300: #82b16d,
  400: #67a14d,
  500: #4c902e,
  600: #458829,
  700: #3c7d23,
  800: #33731d,
  900: #246112,
  A100: #acff98,
  A200: #83ff65,
  A400: #59ff32,
  A700: #45ff19,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$web-primary: mat.define-palette(mat.$green-palette, 700);
$web-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$web-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$web-theme: mat.define-dark-theme($web-primary, $web-accent, $web-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($web-theme);

$primary: map-get($web-theme, primary);

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: "Press Start 2P";
}

* {
  font-family: "Press Start 2P";
}
